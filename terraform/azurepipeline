# Docker
# Build and push an image to Azure Container Registry
# https://docs.microsoft.com/azure/devops/pipelines/languages/docker

trigger:
- production

resources:
- repo: self

variables:
  # Container registry service connection established during pipeline creation
  dockerRegistryServiceConnection: '7d66cea9-d12f-4875-b977-c00e9b8f4461'
  frontendImage: 'wanderlust-frontend'
  backendImage: 'wanderlust-backend'
  containerRegistry: 'wanderlust.azurecr.io'
  frontendDockerfilePath: '$(Build.SourcesDirectory)/frontend/Dockerfile'
  backendDockerfilePath: '$(Build.SourcesDirectory)/backend/Dockerfile'
  tag: '$(Build.BuildId)'
  manifestsPath: 'kubernetes'
  ACR_Name: 'wanderlust.azurecr.io'

  # Agent VM image name
  # vmImageName: 'dev-wanderlust-vm'

stages:
- stage: RunAutomationScript
  displayName: Run Automation Script
  jobs:
  - job: Build
    displayName: Build
    pool:
      name: Default
      demands:
        - agent.name -equals dev-wanderlust-vm
    steps:
    - script: |
        bash Automations/updatebackendnew.sh $(Build.SourcesDirectory)/backend/.env.docker
      displayName: 'Run updatebackendnew.sh script'
    - script: |
        bash Automations/updatefrontendnew.sh $(Build.SourcesDirectory)/frontend/.env.docker
      displayName: 'Run updatefrontendnew.sh script'
        
  
- stage: Build
  displayName: Build and push stage
  jobs:
  - job: Build
    displayName: Build
    pool:
      name: Default
      demands:
        - agent.name -equals dev-wanderlust-vm
    steps:
    - task: AzureCLI@2
      inputs:
        azureSubscription: 'My-Azure-Subs-Connection'
        scriptType: 'bash'
        scriptLocation: 'inlineScript'
        inlineScript: 'az acr login --name=$(containerRegistry)'

    - task: Docker@2
      displayName: Build and push Frontend image to container registry
      inputs:
        command: buildAndPush
        repository: $(frontendImage)
        dockerfile: $(frontendDockerfilePath)
        containerRegistry: $(dockerRegistryServiceConnection)
        tags: |
          $(tag)

    - task: Docker@2
      displayName: Build and push an image to container registry
      inputs:
        command: buildAndPush
        repository: $(backendImage)
        dockerfile: $(backendDockerfilePath)
        containerRegistry: $(dockerRegistryServiceConnection)
        tags: |
          $(tag)
    # - task: AzureCLI@2
    #   inputs:
    #     azureSubscription: 'My-Azure-Subs-Connection'
    #     scriptType: 'bash'
    #     scriptLocation: 'inlineScript'
    #     inlineScript: |
    #       az container create \
    #       --name wanderlust-frontend \
    #       --resource-group wanderlust \
    #       --image $(containerRegistry)/$(frontendImage):$(tag) \
    #       --registry-login-server $(containerRegistry) \
    #       --registry-username "$(registryUsername)" \
    #       --registry-password "$(registryPassword)" \
    #       --dns-name-label wanderlust-frontend-aci \
    #       --os-type Linux \
    #       --ports 5173 \
    #       --cpu 1 \
    #       --memory 1.5

    #       az container create \
    #       --name wanderlust-backend \
    #       --resource-group wanderlust \
    #       --image $(containerRegistry)/$(backendImage):$(tag) \
    #       --registry-login-server $(containerRegistry) \
    #       --registry-username "$(registryUsername)" \
    #       --registry-password "$(registryPassword)" \
    #       --dns-name-label wanderlust-backend-aci \
    #       --os-type Linux \
    #       --ports 8080 \
    #       --cpu 1 \
    #       --memory 1.5

- stage: UpdateK8s
  displayName: Update Kubernetes 
  dependsOn: Build
  jobs:
  - job: UpdateManifests
    pool:
      name: Default
      demands:
        - agent.name -equals dev-wanderlust-vm
    steps:
    - checkout: self

    # - script: |
    #     sed -i -E "s|image:.*wanderlust-backend.*|image: ${ACR_Name}/wanderlust-backend:$(Build.BuildId)" kubernetes/backend.yml
    #     sed -i -E "s|image:.*wanderlust-frontend.*|image: ${ACR_Name}/wanderlust-frontend:$(Build.BuildId)|" kubernetes/frontend.yml
    #   displayName: Update image tags in manifests

    - script: |
        git config user.email "lodhisaurabh9125@gmail.com"
        git config user.name "Sourabh9125"
        git remote set-url origin https://Sourabh9125:$(gitHubCred)@github.com/Sourabh9125/Wanderlust-Mega-Project.git
        git fetch origin production
        git checkout production
        git pull origin production
        # sed -i "s|image: .*/sourabhlodhi/backend-wander.*|image: ${containerRegistry}/wanderlust-backend:${Build.BuildId}|g" ${manifestsPath}/backend.yml
        # sed -i "s|image: .*/sourabhlodhi/frontend-wander.*|image: ${containerRegistry}/wanderlust-frontend:${Build.BuildId}|g" ${manifestsPath}/frontend.yml

        sed -i "s|image:.*sourabhlodhi/backend-wander.*|image: ${containerRegistry}/wanderlust-backend:$(Build.BuildId)|g" kubernetes/backend.yml
        sed -i "s|image:.*sourabhlodhi/frontend-wander.*|image: ${containerRegistry}/wanderlust-frontend:$(Build.BuildId)|g" kubernetes/frontend.yml

        if [ -f "${manifestsPath}/ingress.yml" ]; then
                sed -i "s|host: .*|host: wanderlust.deployit.shop|g" "${manifestsPath}"/ingress.yml
            fi

        git add kubernetes/*.yml

        if git diff --cached --quiet; then
           echo "No changes to commit."
           exit 0
        fi
        
        git commit -m "Update K8s manifests with new image tags"
        git push origin production
      displayName: Commit updated manifests to GitHub
